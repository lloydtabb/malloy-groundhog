
source: GroundhogsAll is duckdb.sql("""
SELECT
  *,
  early_spring + (INTERVAL 6 DAY) AS late_spring,
FROM './gen/groundhogs.csv'
WHERE
  isGroundhog
  AND country = 'USA'
""") extend {
  primary_key: year_
  rename: id is slug, state is region
  dimension:
    year_ is year(early_spring),
    saw_shadow is shadow = 1 ?? false
}

-- I'd like to do this in one pipeline but I can't seem
-- to do it any other way. All I want is a specific set
-- of fields and a primary key but:
-- 1. I have to accept any fields I use in `extend { dimensions: }`,
--    even if I don't want them in the resulting source
-- 2. Primary keys cannot be defined in queries, so I have to define an
--    extra source.

query: G1 is GroundhogsAll -> {
   project:
    year_ is year(early_spring),
    state,
    year_state is concat(year_, ' ', state),
    saw_shadow,
    name, id
}

 source: Groundhogs is G1 extend {
  -- you can't do `primary_key: (year_, state)`
  primary_key: year_state
}

run: Groundhogs -> {
  project: *
  top: 10
}

-- We define "Spring" as:
--   The maximum "average maximum temperature" of Feb and March is >= 40
--
-- Obviously this could use some refinement by state, but that is out of
-- scope of this demo :D
--
-- Note: temp_max is the **average maximum temperature**
-- across all days in the month
-- (it is not the maximum maximum temperature)
--
-- This needs to be split into three parts because:
-- 1. Malloy doesn't support "projecting" an aggregate value
--    (I can't do `is_late_spring is early_spring_temp_max < 40`)
-- 2. query doesn't support primary_key
source: T1 is duckdb.table('./gen/TempMax.csv') extend {
  accept:      `date`, state, max_temp
  rename:      temp_max is max_temp
} query: T2 is T1 -> {
  where:     month(`date`) ? 2 to 3
  aggregate: early_spring_temp_max is max(temp_max)
  group_by:
    year_ is year(`date`),
    state
} source: YearIsLateSpring is T2 extend {
  primary_key: year_state
  dimension:
    is_late_spring is early_spring_temp_max < 40
    year_state is concat(year_, ' ', state)
}

query: GroundhogPredictions is Groundhogs -> {
  join_one: YearIsLateSpring with year_state
  project:
    *,
    is_late_spring is YearIsLateSpring.is_late_spring,
    accurate is YearIsLateSpring.is_late_spring = saw_shadow,
}

query: GroundhogAccuracy is GroundhogPredictions -> {
  aggregate:
    accuracy is avg(pick 100 when accurate else 0),
    num_predictions is count(),
  group_by:
    id, name
}